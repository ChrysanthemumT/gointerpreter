let age = 1;
let name = "Monkey";
let result = 10 * (20/2);

//Arrays and hashes
let myArray = [1, 2, 3, 4, 5];
let thorsten = {"name": "Thorsten", "age": 28};

myArray[0] == 1
thorsten["name"] == "Thorsten"

//binding func to names
let add = fn(a,b) {return a + b;};

//implicit return
let add = fn(a,b) {a+b;};

//implicit return for finbonacci
let fibonacci = fn(x) {
    if (x == 0) {
        0
    } else {
        if (x == 1) {
            1
        } else {
            fibonacci(x-1) + fibonacci(x - 2);
        }
    }
}

// higher order functions
let twice = fn(f, x) {
    return f(f(x));
};

let addTwo = fn(x) {
    return x + 2;
}

twice(addTwo, 2);
// functions are just values :=> first class functions

